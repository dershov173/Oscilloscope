/**
 * Connect.java
 */
package Oscilloscope;

//<<<<<<< HEAD
//import Oscilloscope.myclasses.FourierTransformer;
//=======
import Oscilloscope.SignalLogicalAnalyzer.ComplexSignalDispatcher;
import additional.ComplexSinGenerator2;
import additional.ComplexSinGenerator3;
//>>>>>>> 076d33c9fec0f138a8a6a485275b75c620b88260
import additional.ReceiverSignalSource;
import sdr.beans.Amplifier;
import sdr.beans.ComplexSinGenerator;
import additional.ComplexSinGeneratorN;
import sdr.core.Format;
import sdr.core.FormatException;
import sdr.core.FormatFactory;
import org.jlibrtp.RTPAppIntf;
import Oscilloscope.SignalLogicalAnalyzer.SignalAnalyzer;
import Oscilloscope.SignalLogicalAnalyzer.RealSignalDispatcher;
import Oscilloscope.SignalLogicalAnalyzer.ImageSignalDispatcher;
import Oscilloscope.SignalLogicalAnalyzer.TotalSignalDispatcher;
import java.util.logging.Level;
import java.util.logging.Logger;


/**
 * Установка соединения.
 *
 * @author Anna
 *
 */
public class ConnectPannel extends javax.swing.JFrame {
    
    private DisplayPannel dp;
    //private OscilloscopeMainPanel mainPanel;
    
    /**
     * Creates new form Connect
     */
    public ConnectPannel(DisplayPannel displayPannel) {
        initComponents();
        
        this.dp = displayPannel;
    }
    
    /**
     * Creates new form Connect
     */
    public ConnectPannel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        IPaddress = new javax.swing.JLabel();
        ValueofIPaddress = new javax.swing.JTextField();
        Port = new javax.swing.JLabel();
        ValueofPort = new javax.swing.JTextField();
        OK = new javax.swing.JButton();
        Cancel = new javax.swing.JButton();
        Menu = new javax.swing.JLabel();
        RadioButtonCustom = new javax.swing.JRadioButton();
        RadioButtonSignal = new javax.swing.JRadioButton();
        Format = new javax.swing.JLabel();
        Samplespersecond = new javax.swing.JLabel();
        Channelcount = new javax.swing.JLabel();
        Framespersecond = new javax.swing.JLabel();
        ValueofSamplespersecond = new javax.swing.JTextField();
        ValueofChannelcount = new javax.swing.JTextField();
        ValueofFramespersecond = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setPreferredSize(new java.awt.Dimension(230, 180));

        jPanel1.setPreferredSize(new java.awt.Dimension(500, 300));

        setPreferredSize(new java.awt.Dimension(500, 350));
        IPaddress.setText("IP-address:");

        ValueofIPaddress.setText("127.0.0.1");
        ValueofIPaddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ValueofIPaddressActionPerformed(evt);
            }
        });

        Port.setText("Port:");

        ValueofPort.setText("5050");
        ValueofPort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ValueofPortActionPerformed(evt);
            }
        });

        OK.setText("OK");
        OK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKActionPerformed(evt);
            }
        });

        Cancel.setText("Cancel");
        Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelActionPerformed(evt);
            }
        });

        Menu.setText("Please, choise the generation method");

        RadioButtonCustom.setText("Custom Generator");
        RadioButtonCustom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RadioButtonCustomMouseClicked(evt);
            }
        });

        RadioButtonSignal.setText("SignalDispatcher");
        RadioButtonSignal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RadioButtonSignalMouseClicked(evt);
            }
        });
        RadioButtonSignal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RadioButtonSignalActionPerformed(evt);
            }
        });

        Format.setText("Format");

        Samplespersecond.setText("Samples per second");

        Channelcount.setText("Channel count");

        Framespersecond.setText("Frames per second");

        ValueofSamplespersecond.setText("96000");

        ValueofChannelcount.setText("2");
        ValueofChannelcount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ValueofChannelcountActionPerformed(evt);
            }
        });

        ValueofFramespersecond.setText("100");
        ValueofFramespersecond.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ValueofFramespersecondActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(IPaddress)
                            .addComponent(Port)
                            .addComponent(Format, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(RadioButtonSignal)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(RadioButtonCustom))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ValueofIPaddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ValueofPort, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Samplespersecond, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(ValueofSamplespersecond))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Channelcount, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(ValueofChannelcount))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(Framespersecond, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(ValueofFramespersecond))))
                                .addGap(118, 118, 118))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(147, 147, 147)
                                .addComponent(Menu, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(146, 146, 146)
                                .addComponent(OK)
                                .addGap(48, 48, 48)
                                .addComponent(Cancel)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(Menu, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RadioButtonSignal)
                    .addComponent(RadioButtonCustom))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ValueofIPaddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(IPaddress))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ValueofPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Port))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Samplespersecond)
                    .addComponent(Channelcount)
                    .addComponent(Framespersecond))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Format, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ValueofSamplespersecond, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ValueofChannelcount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ValueofFramespersecond, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OK)
                    .addComponent(Cancel))
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleName("Connect");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKActionPerformed
        // Вариант для генерируемых данных    
        
        setVisible(false);    
        if (GlobalVariables.GenerationMethod == 1){
            FormatFactory.initialize(new Format(96000, 1, 100), 
                                     new Format(96000, 2, 100));
            GlobalVariables.generator = new ComplexSinGenerator2(1200, 32000.0, 0.0); 
            GlobalVariables.format = GlobalVariables.generator.getSignalStream().getFormat();
        
            if (GlobalVariables.numberOfChannel == 0){
                Format format = new Format(GlobalVariables.format.samplesPerSecond,1,(int) Math.round(GlobalVariables.scaleOfAxisX * (GlobalVariables.format.samplesPerSecond / (579 * 2))));
                OscilloscopeMainPanel.currentDispatcher = new RealSignalDispatcher(format);
            } else if (GlobalVariables.numberOfChannel == 1){
                Format format = new Format(GlobalVariables.format.samplesPerSecond,1,(int) Math.round(GlobalVariables.scaleOfAxisX * (GlobalVariables.format.samplesPerSecond / (579 * 2))));
                OscilloscopeMainPanel.currentDispatcher = new ImageSignalDispatcher(format);
            } else if (GlobalVariables.numberOfChannel == 2){
                Format format = new Format(GlobalVariables.format.samplesPerSecond,2,(int) Math.round(GlobalVariables.scaleOfAxisX * (GlobalVariables.format.samplesPerSecond / (579 * 2))));
                OscilloscopeMainPanel.currentDispatcher = new ComplexSignalDispatcher(format);
            } else if (GlobalVariables.numberOfChannel == 3){
                Format format = new Format(GlobalVariables.format.samplesPerSecond,3,(int) Math.round(GlobalVariables.scaleOfAxisX * (GlobalVariables.format.samplesPerSecond / (579 * 2))));
                OscilloscopeMainPanel.currentDispatcher = new TotalSignalDispatcher(format);
            }
        
            try {
                OscilloscopeMainPanel.currentDispatcher.connect(GlobalVariables.generator);          
            } catch (FormatException E) {
                return;
            }
            GlobalVariables.generator.start();
            GlobalVariables.displayEnable = true;
        
            try {
                dp.connect(OscilloscopeMainPanel.currentDispatcher);
            } catch (FormatException E) {
                return;
            }
            OscilloscopeMainPanel.currentDispatcher.start();
            
        }        
        else {
        //setVisible(false);   
            int port = Integer.parseInt(ValueofPort.getText());  
            FormatFactory.initialize(new Format(96000, 1, 100), 
                                     new Format(96000, 2, 100));
        
        // Источник данных
            ReceiverSignalSource dataSource = new ReceiverSignalSource(port); //5050
        // Усилитель
            Amplifier amplifier = new Amplifier(1); // Заменяет генератор
        
            try {            
                amplifier.connect(dataSource);
                dp.connect(amplifier);
            } catch (FormatException E) {
                return;
            }
        
            dataSource.start();
            GlobalVariables.displayEnable = true;        
        }

    }//GEN-LAST:event_OKActionPerformed

    private void CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelActionPerformed
        setVisible(false);        
    }//GEN-LAST:event_CancelActionPerformed

    private void ValueofPortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ValueofPortActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ValueofPortActionPerformed

    private void ValueofIPaddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ValueofIPaddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ValueofIPaddressActionPerformed

    private void RadioButtonSignalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RadioButtonSignalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RadioButtonSignalActionPerformed

    private void ValueofChannelcountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ValueofChannelcountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ValueofChannelcountActionPerformed

    private void ValueofFramespersecondActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ValueofFramespersecondActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ValueofFramespersecondActionPerformed

    private void RadioButtonSignalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RadioButtonSignalMouseClicked
        GlobalVariables.GenerationMethod = 0;
        ValueofPort.setEnabled(true);
        ValueofIPaddress.setEnabled(true);
        ValueofChannelcount.setEnabled(true);
        ValueofFramespersecond.setEnabled(true);
        ValueofSamplespersecond.setEnabled(true);
        RadioButtonCustom.setSelected(false);
    }//GEN-LAST:event_RadioButtonSignalMouseClicked

    private void RadioButtonCustomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RadioButtonCustomMouseClicked
        GlobalVariables.GenerationMethod = 1;
        ValueofPort.setEnabled(false);
        ValueofIPaddress.setEnabled(false);
        ValueofChannelcount.setEnabled(false);
        ValueofFramespersecond.setEnabled(false);
        ValueofSamplespersecond.setEnabled(false);
        RadioButtonSignal.setSelected(false);
        GlobalVariables.format = new Format(Integer.parseInt(ValueofSamplespersecond.getText()),
                                            Integer.parseInt(ValueofChannelcount.getText()),
                                            Integer.parseInt(ValueofFramespersecond.getText()));
    }//GEN-LAST:event_RadioButtonCustomMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConnectPannel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConnectPannel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConnectPannel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConnectPannel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConnectPannel().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cancel;
    private javax.swing.JLabel Channelcount;
    private javax.swing.JLabel Format;
    private javax.swing.JLabel Framespersecond;
    private javax.swing.JLabel IPaddress;
    private javax.swing.JLabel Menu;
    private javax.swing.JButton OK;
    private javax.swing.JLabel Port;
    private javax.swing.JRadioButton RadioButtonCustom;
    private javax.swing.JRadioButton RadioButtonSignal;
    private javax.swing.JLabel Samplespersecond;
    private javax.swing.JTextField ValueofChannelcount;
    private javax.swing.JTextField ValueofFramespersecond;
    private javax.swing.JTextField ValueofIPaddress;
    private javax.swing.JTextField ValueofPort;
    private javax.swing.JTextField ValueofSamplespersecond;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
